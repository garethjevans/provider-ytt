apiVersion: ytt.crossplane.io/v1alpha1
kind: YttTemplate
metadata:
  name: mytemplate
spec:
  forProvider:
    configurableField: test
  providerConfigRef:
    name: example
  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    #@ def maven_param(key):
    #@   if not key in data.values.params["maven"]:
    #@     return None
    #@   end
    #@   return data.values.params["maven"][key]
    #@ end

    ---
    apiVersion: source.toolkit.fluxcd.io/v1beta1
    kind: GitRepository
    metadata:
    name: #@ data.values.workload.metadata.name
    labels: #@ merge_labels({ "app.kubernetes.io/component": "source" })
    spec:
    interval: 1m0s
    url: #@ data.values.workload.spec.source.git.url
    ref: #@ data.values.workload.spec.source.git.ref
    gitImplementation: #@ data.values.params.gitImplementation
    ignore: |
    !.git
    #@ if/end param("gitops_ssh_secret"):
    secretRef:
      name: #@ param("gitops_ssh_secret")